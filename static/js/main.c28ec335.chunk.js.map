{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","displayedTodo","changeShowing","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","value","changeFilter","changeInput","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","loadingUser","setLoadingUsers","useEffect","userId","selectedUser","finally","href","name","App","listOfTodos","setListOFTodos","loadingTodos","setLoadingTodos","showing","setShowing","filter","setFilter","input","setInput","find","todoList","filteredListOfTodos","list","listCopy","includes","filterTodos","length","ReactDOM","render","document","getElementById"],"mappings":"oPAUaA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MACAC,EAFuC,EAEvCA,cACAC,EAHuC,EAGvCA,cAHuC,OAKvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBACE,UAAQ,OACRF,UAAWG,IAAG,CACZ,6BAA0C,OAAbL,QAAa,IAAbA,OAAA,EAAAA,EAAeM,MAAOF,EAAKE,KAH5D,UAOE,oBAAIJ,UAAU,eAAd,SAA8BE,EAAKE,KACnC,oBAAIJ,UAAU,eAAd,SACGE,EAAKG,UAEF,sBAAML,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAWG,IAAG,MAAO,CAAE,WAAYD,EAAKG,gBAE3C,KAER,oBAAIL,UAAU,2BAAd,SACE,mBAAGA,UAAWG,IAAG,CACf,mBAAoBD,EAAKG,UACzB,mBAAoBH,EAAKG,YAF3B,SAKGH,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMT,EAAcG,EAAKE,KAJpC,SAME,sBAAMJ,UAAU,OAAhB,SACE,mBAAGA,UAAWG,IAAG,MACf,CACE,gBAA6B,OAAbL,QAAa,IAAbA,OAAA,EAAAA,EAAeM,MAAOF,EAAKE,GAC3C,UAAuB,OAAbN,QAAa,IAAbA,OAAA,EAAAA,EAAeM,MAAOF,EAAKE,eA/B1CF,EAAKE,aC9BPK,EAA8B,SAAC,GAAD,IACzCC,EADyC,EACzCA,MACAC,EAFyC,EAEzCA,aACAC,EAHyC,EAGzCA,YAHyC,OAKzC,uBAAMZ,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRa,SAAU,SAACC,GAAD,OAAWH,EAAaG,EAAMC,OAAOL,QAFjD,UAIE,wBACEA,MAAM,MADR,iBAKA,wBACEA,MAAM,SADR,oBAKA,wBACEA,MAAM,YADR,8BASN,oBAAGV,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVgB,YAAY,YACZN,MAAOA,EACPG,SAAU,SAACC,GAAD,OAAWF,EAAYE,EAAMC,OAAOL,UAEhD,sBAAMV,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBiB,MAAO,CAAEC,cAAe,OAAxD,SAEa,KAAVR,EAEG,wBACE,UAAQ,oBACR,aAAW,SACXH,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMI,EAAY,OAE3B,YC1DDO,G,MAAmB,kBAC9B,qBAAKnB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAASoB,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICXMC,EAA6B,SAAC,GAGpC,IAFLjC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEA,EAAwBiC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAuCF,oBAAS,GAAhD,mBAAOG,EAAP,KAAoBC,EAApB,KAWA,OATAC,qBAAU,WDMW,IAACC,ECLE,OAAlBxC,IACFsC,GAAgB,IDIEE,ECHX,OAACxC,QAAD,IAACA,OAAD,EAACA,EAAewC,ODGclB,EAAG,iBAAiBkB,KCFtDX,MAAK,SAACY,GAAD,OAAkBL,EAAQK,MAC/BC,SAAQ,kBAAMJ,GAAgB,SAElC,CAACtC,IAEGA,EACL,sBAAKE,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdmC,EACC,cAAC,EAAD,IAEA,sBAAKnC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYF,EAAcM,MAI1B,wBACEG,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,kBAAMT,GAAe,SAIlC,sBAAKC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGF,EAAcQ,QAGjB,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UAEE,wBAAQA,UAAWG,IAAG,CACpB,oBAAmB,OAACL,QAAD,IAACA,KAAeO,WACnC,0BAAoBP,QAApB,IAAoBA,OAApB,EAAoBA,EAAeO,YAFrC,SAKG,OAACP,QAAD,IAACA,KAAeO,UAAwB,OAAZ,YAG9B,OAED,mBAAGoC,KAAK,2BAAR,gBACGR,QADH,IACGA,OADH,EACGA,EAAMS,mBAQjB,MCpEOC,EAAgB,WAC3B,MAAsCX,mBAAiB,IAAvD,mBAAOY,EAAP,KAAoBC,EAApB,KACA,EAAwCb,oBAAS,GAAjD,mBAAOc,EAAP,KAAqBC,EAArB,KACA,EAA8Bf,oBAAU,GAAxC,mBAAOgB,EAAP,KAAgBC,EAAhB,KACA,EAA4BjB,mBAAS,OAArC,mBAAOkB,EAAP,KAAeC,EAAf,KACA,EAA0BnB,mBAAS,IAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KACMvD,EAAgB8C,EAAYU,MAAK,SAAApD,GAAI,OAAIA,EAAKE,KAAO4C,MAAY,KAEvEX,qBAAU,WACRU,GAAgB,GFGU3B,EAAY,UEDnCO,MAAK,SAAC4B,GAAD,OAAcV,EAAeU,MAClCf,SAAQ,kBAAMO,GAAgB,QAChC,IAEH,IAqBMS,EArBc,SAACC,GACnB,IAAIC,EAAWD,EAEf,OAAQP,GACN,IAAK,SACHQ,EAAWA,EAASR,QAAO,SAAAhD,GAAI,OAAuB,IAAnBA,EAAKG,aACxC,MACF,IAAK,YACHqD,EAAWA,EAASR,QAAO,SAAAhD,GAAI,OAAuB,IAAnBA,EAAKG,aAU5C,MAJc,KAAV+C,IACFM,EAAWA,EAASR,QAAO,SAAAhD,GAAI,OAAIA,EAAKI,MAAMqD,SAASP,OAGlDM,EAGmBE,CAAYhB,GAExC,OACE,qCACE,qBAAK5C,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAYU,MAAO0C,EAAOzC,aAAcwC,EAAWvC,YAAayC,MAGlE,sBAAKrD,UAAU,QAAf,UACG8C,GAAiB,cAAC,EAAD,KAChBA,GACCF,EAAYiB,OAAS,GACpB,cAAC,EAAD,CAAUhE,MAAO2D,EAAqB1D,cAAeA,EAAeC,cAAekD,cAM/F,cAAC,EAAD,CAAWnD,cAAeA,EAAeC,cAAekD,QCpE9Da,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c28ec335.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  displayedTodo: Todo | null;\n  changeShowing: (number: number) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  displayedTodo,\n  changeShowing,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={cn({\n            'has-background-info-light': displayedTodo?.id === todo.id,\n          })}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed\n              ? (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className={cn('fas', { 'fa-check': todo.completed })} />\n                </span>\n              ) : ''}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => changeShowing(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={cn('far',\n                  {\n                    'fa-eye-slash': displayedTodo?.id === todo.id,\n                    'fa-eye': displayedTodo?.id !== todo.id,\n                  })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","interface Props {\n  value: string;\n  changeFilter: (string: string) => void;\n  changeInput: (string: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  value,\n  changeFilter,\n  changeInput,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => changeFilter(event.target.value)}\n        >\n          <option\n            value=\"all\"\n          >\n            All\n          </option>\n          <option\n            value=\"active\"\n          >\n            Active\n          </option>\n          <option\n            value=\"completed\"\n          >\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={value}\n        onChange={(event) => changeInput(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        {value !== ''\n          ? (\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"delete\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => changeInput('')}\n            />\n          ) : ''}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  displayedTodo: Todo | null;\n  changeShowing: (number: number) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  displayedTodo,\n  changeShowing,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loadingUser, setLoadingUsers] = useState(false);\n\n  useEffect(() => {\n    if (displayedTodo !== null) {\n      setLoadingUsers(true);\n      getUser(displayedTodo?.userId)\n        .then((selectedUser) => setUser(selectedUser))\n        .finally(() => setLoadingUsers(false));\n    }\n  }, [displayedTodo]);\n\n  return displayedTodo ? (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loadingUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${displayedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => changeShowing(-1)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {displayedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn({\n                'has-text-danger': !displayedTodo?.completed,\n                'has-text-success': displayedTodo?.completed,\n              })}\n              >\n                {!displayedTodo?.completed ? 'Planned' : 'Done'}\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n    : null;\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [listOfTodos, setListOFTodos] = useState<Todo[]>([]);\n  const [loadingTodos, setLoadingTodos] = useState(false);\n  const [showing, setShowing] = useState(-1);\n  const [filter, setFilter] = useState('All');\n  const [input, setInput] = useState('');\n  const displayedTodo = listOfTodos.find(todo => todo.id === showing) || null;\n\n  useEffect(() => {\n    setLoadingTodos(true);\n    getTodos()\n      .then((todoList) => setListOFTodos(todoList))\n      .finally(() => setLoadingTodos(false));\n  }, []);\n\n  const filterTodos = (list: Todo[]) => {\n    let listCopy = list;\n\n    switch (filter) {\n      case 'active':\n        listCopy = listCopy.filter(todo => todo.completed !== true);\n        break;\n      case 'completed':\n        listCopy = listCopy.filter(todo => todo.completed === true);\n        break;\n      default:\n        break;\n    }\n\n    if (input !== '') {\n      listCopy = listCopy.filter(todo => todo.title.includes(input));\n    }\n\n    return listCopy;\n  };\n\n  const filteredListOfTodos = filterTodos(listOfTodos);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter value={input} changeFilter={setFilter} changeInput={setInput} />\n            </div>\n\n            <div className=\"block\">\n              {loadingTodos && (<Loader />)}\n              {!loadingTodos\n              && listOfTodos.length > 0\n              && (<TodoList todos={filteredListOfTodos} displayedTodo={displayedTodo} changeShowing={setShowing} />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal displayedTodo={displayedTodo} changeShowing={setShowing} />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}